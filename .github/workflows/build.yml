name: build

on:
  push:
    branches:
    - main
  pull_request: { }
  workflow_dispatch: { }

env:
  # renovate: datasource=npm depName=renovate versioning=semver
  RENOVATE_VERSION: 41.23.2

defaults:
  run:
    shell: bash

jobs:
  build:
    if: ${{
      (github.event_name == 'push' && startsWith(github.ref, 'refs/tags/'))
      || (github.event_name == 'push' && !startsWith(github.event.head_commit.message, '[push-back]'))
      || github.event_name != 'push'
      }}
    runs-on: ubuntu-latest
    timeout-minutes: 10
    concurrency:
      group: ${{github.workflow}}-search-${{github.ref}}
      cancel-in-progress: true
    outputs:
      configFiles: ${{steps.configs.outputs.result}}
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: lts/*
        cache: npm
        cache-dependency-path: .github/workflows/build.yml

    - name: Create configs file
      id: configsFile
      run: |
        file=$(mktemp -q)
        echo "path=$file" >> "$GITHUB_OUTPUT"
    - name: Find Renovate config files
      uses: actions/github-script@v7
      with:
        result-encoding: json
        script: |
          const path = require('path')
          const fs = require('fs')
          const globber = await glob.create([
            '**/*.json',
            '**/*.json5',
            '!.github/**',
          ].join('\n'))
          let files = await globber.glob()
          files = files
            .map(file =>
              path.relative(process.cwd(), file)
            )
            .sort()
          if (files.length) {
            core.info("Found config files:")
            files.forEach(file => `  ${file}`)
          } else {
            core.warn("Not config files found")
          }
          fs.writeFileSync('${{steps.configsFile.outputs.path}}', files.join('\n'), 'utf8')

    - name: Validate and migrate config
      run: |
        for configFile in `cat "${{steps.configsFile.outputs.path}}"`; do
          echo " "
          echo "Validating $configFile"
          logFile=$(mktemp -q)
          npx --yes --loglevel=error --package "renovate@${{env.RENOVATE_VERSION}}" -- renovate-config-validator --strict "$configFile" 2>&1 | tee "$logFile" \
            || ( \
              node .github/workflows/build-process-log.js "$configFile" "$logFile" \
              && echo "Revalidating $configFile" \
              && npx --yes --loglevel=error --package "renovate@${{env.RENOVATE_VERSION}}" -- renovate-config-validator --strict "$configFile"
            )
        done

    - name: Push back migrated configs
      if: ${{startsWith(github.ref, 'refs/heads/')}}
      uses: remal-github-actions/push-back@v1
      with:
        githubToken: ${{secrets.PUSH_BACK_TOKEN}}
        message: '[push-back] Push-back migrated configs'
